


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_CMSDK_CM0.s
    3 00000000         ; * @brief    CMSIS Cortex-M0 Core Device Startup File f
                       or
    4 00000000         ; *           Device CMSDK_CM0
    5 00000000         ; * @version  V3.01
    6 00000000         ; * @date     06. March 2012
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2012 ARM Limited. All rights reserved.
                       
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         ;/*
   25 00000000         ;//-------- <<< Use Configuration Wizard in Context Menu
                        >>> ------------------
   26 00000000         ;*/
   27 00000000         
   28 00000000         
   29 00000000         ; <h> Stack Configuration
   30 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   31 00000000         ; </h>
   32 00000000         
   33 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   34 00000000         
   35 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=4
   36 00000000         Stack_Mem
                               SPACE            Stack_Size
   37 00000200         __initial_sp
   38 00000200         
   39 00000200         
   40 00000200         ; <h> Heap Configuration
   41 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   42 00000200         ; </h>
   43 00000200         



ARM Macro Assembler    Page 2 


   44 00000200 00000200 
                       Heap_Size
                               EQU              0x00000200
   45 00000200         
   46 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
4
   47 00000000         __heap_base
   48 00000000         Heap_Mem
                               SPACE            Heap_Size
   49 00000200         __heap_limit
   50 00000200         
   51 00000200         
   52 00000200                 PRESERVE8
   53 00000200                 THUMB
   54 00000200         
   55 00000200         
   56 00000200         ; Vector Table Mapped to Address 0 at Reset
   57 00000200         
   58 00000200                 AREA             RESET, DATA, READONLY
   59 00000000                 EXPORT           __Vectors
   60 00000000         
   61 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   62 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   63 00000008 00000000        DCD              0           ; NMI Handler
   64 0000000C 00000000        DCD              0           ; Hard Fault Handle
                                                            r
   65 00000010 00000000        DCD              0           ; Reserved
   66 00000014 00000000        DCD              0           ; Reserved
   67 00000018 00000000        DCD              0           ; Reserved
   68 0000001C 00000000        DCD              0           ; Reserved
   69 00000020 00000000        DCD              0           ; Reserved
   70 00000024 00000000        DCD              0           ; Reserved
   71 00000028 00000000        DCD              0           ; Reserved
   72 0000002C 00000000        DCD              0           ; SVCall Handler
   73 00000030 00000000        DCD              0           ; Reserved
   74 00000034 00000000        DCD              0           ; Reserved
   75 00000038 00000000        DCD              0           ; PendSV Handler
   76 0000003C 00000000        DCD              0           ; SysTick Handler
   77 00000040         
   78 00000040 00000000        DCD              UART_Handler ; IRQ0 Handler
   79 00000044 00000000        DCD              TIME_Handler ; IRQ1 Handler
   80 00000048 00000000        DCD              KEY0_Handler ; IRQ2 Handler
   81 0000004C 00000000        DCD              KEY1_Handler ; IRQ3 Handler
   82 00000050 00000000        DCD              KEY2_Handler ; IRQ4 Handler
   83 00000054 00000000        DCD              KEY3_Handler ; IRQ5 Handler
   84 00000058 00000000        DCD              KEY4_Handler ; IRQ6 Handler
   85 0000005C 00000000        DCD              KEY5_Handler ; IRQ7 Handler
   86 00000060 00000000        DCD              KEY6_Handler ; IRQ8 Handler
   87 00000064 00000000        DCD              KEY7_Handler ; IRQ9 Handler
   88 00000068         
   89 00000068                 AREA             |.text|, CODE, READONLY
   90 00000000         
   91 00000000         
   92 00000000         ; Reset Handler
   93 00000000         
   94 00000000         Reset_Handler
                               PROC



ARM Macro Assembler    Page 3 


   95 00000000                 GLOBAL           Reset_Handler
   96 00000000                 ENTRY
   97 00000000                 IMPORT           __main
   98 00000000 4818            LDR              R0, =__main
   99 00000002 4680            MOV              R8, R0
  100 00000004 46C1            MOV              R9, R8
  101 00000006 4700            BX               R0
  102 00000008                 ENDP
  103 00000008         
  104 00000008         
  105 00000008         UART_Handler
                               PROC
  106 00000008                 EXPORT           UART_Handler            [WEAK]
  107 00000008                 IMPORT           UARTHandle
  108 00000008 B507            PUSH             {R0,R1,R2,LR}
  109 0000000A F7FF FFFE       BL               UARTHandle
  110 0000000E BD07            POP              {R0,R1,R2,PC}
  111 00000010                 ENDP
  112 00000010         
  113 00000010         TIME_Handler
                               PROC
  114 00000010                 EXPORT           TIME_Handler            [WEAK]
  115 00000010                 IMPORT           TIMEHandle
  116 00000010 B507            PUSH             {R0,R1,R2,LR}
  117 00000012 F7FF FFFE       BL               TIMEHandle
  118 00000016 BD07            POP              {R0,R1,R2,PC}
  119 00000018                 ENDP
  120 00000018         
  121 00000018         KEY0_Handler
                               PROC
  122 00000018                 EXPORT           KEY0_Handler            [WEAK]
  123 00000018                 IMPORT           KEY0Handle
  124 00000018 B507            PUSH             {R0,R1,R2,LR}
  125 0000001A F7FF FFFE       BL               KEY0Handle
  126 0000001E BD07            POP              {R0,R1,R2,PC}
  127 00000020                 ENDP
  128 00000020         
  129 00000020         KEY1_Handler
                               PROC
  130 00000020                 EXPORT           KEY1_Handler            [WEAK]
  131 00000020                 IMPORT           KEY1Handle
  132 00000020 B507            PUSH             {R0,R1,R2,LR}
  133 00000022 F7FF FFFE       BL               KEY1Handle
  134 00000026 BD07            POP              {R0,R1,R2,PC}
  135 00000028                 ENDP
  136 00000028         
  137 00000028         KEY2_Handler
                               PROC
  138 00000028                 EXPORT           KEY2_Handler            [WEAK]
  139 00000028                 IMPORT           KEY2Handle
  140 00000028 B507            PUSH             {R0,R1,R2,LR}
  141 0000002A F7FF FFFE       BL               KEY2Handle
  142 0000002E BD07            POP              {R0,R1,R2,PC}
  143 00000030                 ENDP
  144 00000030         
  145 00000030         KEY3_Handler
                               PROC
  146 00000030                 EXPORT           KEY3_Handler            [WEAK]
  147 00000030                 IMPORT           KEY3Handle



ARM Macro Assembler    Page 4 


  148 00000030 B507            PUSH             {R0,R1,R2,LR}
  149 00000032 F7FF FFFE       BL               KEY3Handle
  150 00000036 BD07            POP              {R0,R1,R2,PC}
  151 00000038                 ENDP
  152 00000038         
  153 00000038         KEY4_Handler
                               PROC
  154 00000038                 EXPORT           KEY4_Handler            [WEAK]
  155 00000038                 IMPORT           KEY4Handle
  156 00000038 B507            PUSH             {R0,R1,R2,LR}
  157 0000003A F7FF FFFE       BL               KEY4Handle
  158 0000003E BD07            POP              {R0,R1,R2,PC}
  159 00000040                 ENDP
  160 00000040         
  161 00000040         KEY5_Handler
                               PROC
  162 00000040                 EXPORT           KEY5_Handler            [WEAK]
  163 00000040                 IMPORT           KEY5Handle
  164 00000040 B507            PUSH             {R0,R1,R2,LR}
  165 00000042 F7FF FFFE       BL               KEY5Handle
  166 00000046 BD07            POP              {R0,R1,R2,PC}
  167 00000048                 ENDP
  168 00000048         
  169 00000048         KEY6_Handler
                               PROC
  170 00000048                 EXPORT           KEY6_Handler            [WEAK]
  171 00000048                 IMPORT           KEY6Handle
  172 00000048 B507            PUSH             {R0,R1,R2,LR}
  173 0000004A F7FF FFFE       BL               KEY6Handle
  174 0000004E BD07            POP              {R0,R1,R2,PC}
  175 00000050                 ENDP
  176 00000050         
  177 00000050         KEY7_Handler
                               PROC
  178 00000050                 EXPORT           KEY7_Handler            [WEAK]
  179 00000050                 IMPORT           KEY7Handle
  180 00000050 B507            PUSH             {R0,R1,R2,LR}
  181 00000052 F7FF FFFE       BL               KEY7Handle
  182 00000056 BD07            POP              {R0,R1,R2,PC}
  183 00000058                 ENDP
  184 00000058         
  185 00000058                 ALIGN            4
  186 00000058         
  187 00000058                 IF               :DEF:__MICROLIB
  194 00000058         
  195 00000058                 IMPORT           __use_two_region_memory
  196 00000058                 EXPORT           __user_initial_stackheap
  197 00000058         
  198 00000058         __user_initial_stackheap
  199 00000058         
  200 00000058 4803            LDR              R0, =  Heap_Mem
  201 0000005A 4904            LDR              R1, =(Stack_Mem + Stack_Size)
  202 0000005C 4A04            LDR              R2, = (Heap_Mem +  Heap_Size)
  203 0000005E 4B05            LDR              R3, = Stack_Mem
  204 00000060 4770            BX               LR
  205 00000062         
  206 00000062 00 00           ALIGN
  207 00000064         
  208 00000064                 ENDIF



ARM Macro Assembler    Page 5 


  209 00000064         
  210 00000064                 END
              00000000 
              00000000 
              00000200 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\startup_cmsdk_cm0.d -o.\startup_cmsdk_cm0.o -IE:\keil5\Arm\Packs
\Keil\V2M-MPS2_CMx_BSP\1.7.0\Device\CMSDK_CM0\Include -IE:\keil5\ARM\CMSIS\Incl
ude --predefine="__UVISION_VERSION SETA 531" --predefine="CMSDK_CM0 SETA 1" --l
ist=.\listings\startup_cmsdk_cm0.lst startup_CMSDK_CM0.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 35 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 36 in file startup_CMSDK_CM0.s
   Uses
      At line 201 in file startup_CMSDK_CM0.s
      At line 203 in file startup_CMSDK_CM0.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 37 in file startup_CMSDK_CM0.s
   Uses
      At line 61 in file startup_CMSDK_CM0.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 46 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 48 in file startup_CMSDK_CM0.s
   Uses
      At line 200 in file startup_CMSDK_CM0.s
      At line 202 in file startup_CMSDK_CM0.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 47 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000200

Symbol: __heap_limit
   Definitions
      At line 49 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 58 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 61 in file startup_CMSDK_CM0.s
   Uses
      At line 59 in file startup_CMSDK_CM0.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 89 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: .text unused
KEY0_Handler 00000018

Symbol: KEY0_Handler
   Definitions
      At line 121 in file startup_CMSDK_CM0.s
   Uses
      At line 80 in file startup_CMSDK_CM0.s
      At line 122 in file startup_CMSDK_CM0.s

KEY1_Handler 00000020

Symbol: KEY1_Handler
   Definitions
      At line 129 in file startup_CMSDK_CM0.s
   Uses
      At line 81 in file startup_CMSDK_CM0.s
      At line 130 in file startup_CMSDK_CM0.s

KEY2_Handler 00000028

Symbol: KEY2_Handler
   Definitions
      At line 137 in file startup_CMSDK_CM0.s
   Uses
      At line 82 in file startup_CMSDK_CM0.s
      At line 138 in file startup_CMSDK_CM0.s

KEY3_Handler 00000030

Symbol: KEY3_Handler
   Definitions
      At line 145 in file startup_CMSDK_CM0.s
   Uses
      At line 83 in file startup_CMSDK_CM0.s
      At line 146 in file startup_CMSDK_CM0.s

KEY4_Handler 00000038

Symbol: KEY4_Handler
   Definitions
      At line 153 in file startup_CMSDK_CM0.s
   Uses
      At line 84 in file startup_CMSDK_CM0.s
      At line 154 in file startup_CMSDK_CM0.s

KEY5_Handler 00000040

Symbol: KEY5_Handler
   Definitions
      At line 161 in file startup_CMSDK_CM0.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 85 in file startup_CMSDK_CM0.s
      At line 162 in file startup_CMSDK_CM0.s

KEY6_Handler 00000048

Symbol: KEY6_Handler
   Definitions
      At line 169 in file startup_CMSDK_CM0.s
   Uses
      At line 86 in file startup_CMSDK_CM0.s
      At line 170 in file startup_CMSDK_CM0.s

KEY7_Handler 00000050

Symbol: KEY7_Handler
   Definitions
      At line 177 in file startup_CMSDK_CM0.s
   Uses
      At line 87 in file startup_CMSDK_CM0.s
      At line 178 in file startup_CMSDK_CM0.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 94 in file startup_CMSDK_CM0.s
   Uses
      At line 62 in file startup_CMSDK_CM0.s
      At line 95 in file startup_CMSDK_CM0.s

TIME_Handler 00000010

Symbol: TIME_Handler
   Definitions
      At line 113 in file startup_CMSDK_CM0.s
   Uses
      At line 79 in file startup_CMSDK_CM0.s
      At line 114 in file startup_CMSDK_CM0.s

UART_Handler 00000008

Symbol: UART_Handler
   Definitions
      At line 105 in file startup_CMSDK_CM0.s
   Uses
      At line 78 in file startup_CMSDK_CM0.s
      At line 106 in file startup_CMSDK_CM0.s

__user_initial_stackheap 00000058

Symbol: __user_initial_stackheap
   Definitions
      At line 198 in file startup_CMSDK_CM0.s
   Uses
      At line 196 in file startup_CMSDK_CM0.s
Comment: __user_initial_stackheap used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000200

Symbol: Heap_Size
   Definitions
      At line 44 in file startup_CMSDK_CM0.s
   Uses
      At line 48 in file startup_CMSDK_CM0.s
      At line 202 in file startup_CMSDK_CM0.s

Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 33 in file startup_CMSDK_CM0.s
   Uses
      At line 36 in file startup_CMSDK_CM0.s
      At line 201 in file startup_CMSDK_CM0.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

KEY0Handle 00000000

Symbol: KEY0Handle
   Definitions
      At line 123 in file startup_CMSDK_CM0.s
   Uses
      At line 125 in file startup_CMSDK_CM0.s
Comment: KEY0Handle used once
KEY1Handle 00000000

Symbol: KEY1Handle
   Definitions
      At line 131 in file startup_CMSDK_CM0.s
   Uses
      At line 133 in file startup_CMSDK_CM0.s
Comment: KEY1Handle used once
KEY2Handle 00000000

Symbol: KEY2Handle
   Definitions
      At line 139 in file startup_CMSDK_CM0.s
   Uses
      At line 141 in file startup_CMSDK_CM0.s
Comment: KEY2Handle used once
KEY3Handle 00000000

Symbol: KEY3Handle
   Definitions
      At line 147 in file startup_CMSDK_CM0.s
   Uses
      At line 149 in file startup_CMSDK_CM0.s
Comment: KEY3Handle used once
KEY4Handle 00000000

Symbol: KEY4Handle
   Definitions
      At line 155 in file startup_CMSDK_CM0.s
   Uses
      At line 157 in file startup_CMSDK_CM0.s
Comment: KEY4Handle used once
KEY5Handle 00000000

Symbol: KEY5Handle
   Definitions
      At line 163 in file startup_CMSDK_CM0.s
   Uses
      At line 165 in file startup_CMSDK_CM0.s
Comment: KEY5Handle used once
KEY6Handle 00000000

Symbol: KEY6Handle
   Definitions
      At line 171 in file startup_CMSDK_CM0.s
   Uses
      At line 173 in file startup_CMSDK_CM0.s
Comment: KEY6Handle used once
KEY7Handle 00000000

Symbol: KEY7Handle



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 179 in file startup_CMSDK_CM0.s
   Uses
      At line 181 in file startup_CMSDK_CM0.s
Comment: KEY7Handle used once
TIMEHandle 00000000

Symbol: TIMEHandle
   Definitions
      At line 115 in file startup_CMSDK_CM0.s
   Uses
      At line 117 in file startup_CMSDK_CM0.s
Comment: TIMEHandle used once
UARTHandle 00000000

Symbol: UARTHandle
   Definitions
      At line 107 in file startup_CMSDK_CM0.s
   Uses
      At line 109 in file startup_CMSDK_CM0.s
Comment: UARTHandle used once
__main 00000000

Symbol: __main
   Definitions
      At line 97 in file startup_CMSDK_CM0.s
   Uses
      At line 98 in file startup_CMSDK_CM0.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 195 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __use_two_region_memory unused
12 symbols
372 symbols in table
